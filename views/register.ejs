<div class="notification-bar">
  <span class="notification-message" id="notification"></span>
</div>

<section class="register-container">
  <header class="form-header">
    <h2>Create Your Account</h2>
  </header>

  <form
    action="/register"
    method="POST"
    id="form-register"
    class="register-form"
  >
    <div class="form-group">
      <label for="name">Full Name</label>
      <input
        type="text"
        name="name"
        id="name"
        placeholder="Enter your full name"
        class="input-field"
      />
    </div>

    <div class="form-group">
      <label for="email">Email Address</label>
      <input
        type="email"
        name="email"
        id="email"
        placeholder="Enter your email"
        class="input-field"
      />
    </div>

    <div class="form-group">
      <label for="password">Create Password</label>
      <input
        type="password"
        name="password"
        id="password"
        placeholder="Create a secure password"
        class="input-field"
      />
    </div>

    <button type="submit" class="submit-button">Register</button>
  </form>
</section>

<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();

  const notification = document.getElementById("notification");
  const form = document.getElementById("form-register");

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    const name = document.getElementById("name").value.trim();
    const email = document.getElementById("email").value.trim();
    const password = document.getElementById("password").value.trim();

    if (!name || !email || !password) {
      alert("All fields are required!");
      return;
    }

    const requestBody = { name, email, password };

    try {
      const response = await fetch("/register", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(requestBody),
      });

      const data = await response.json();

      if (data.status === 201) {
        socket.emit("notification", data.message);
        setTimeout(() => {
          window.location.href = `/sign-in`;
        }, 3000);
      } else {
        socket.emit("notification", data.message);
        setTimeout(() => {
          location.reload();
        }, 3000);
      }
    } catch (error) {
      console.error(error);
      alert("An error occurred. Please try again.");
    }
  });

  socket.on("notification", (message) => {
    alert(message);
  });
</script>
